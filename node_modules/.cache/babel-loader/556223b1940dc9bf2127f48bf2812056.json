{"ast":null,"code":"var _jsxFileName = \"D:\\\\GitHub_Repository\\\\reactint_practice\\\\src\\\\component\\\\Reacttable\\\\ReactTable.jsx\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\nimport cellEditFactory, { Type } from \"react-bootstrap-table2-editor\";\nimport filterFactory, { textFilter } from 'react-bootstrap-table2-filter';\nimport \"react-bootstrap-table-next/dist/react-bootstrap-table2.min.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ReactTable = () => {\n  _s();\n\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const getData = () => {\n    axios(\"https://fakestoreapi.com/products\").then(res => {\n      console.log(res.data);\n      setData(res.data);\n    });\n  };\n\n  const emailFormatter = (data, row) => {\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [\"Description = \", data]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 12\n    }, this);\n  }; //CheckBox\n\n\n  const selectRow = {\n    mode: \"checkbox\",\n    clickToSelect: true,\n    selected: [1, 3],\n    clickToEdit: true\n  };\n  const columns = [{\n    dataField: \"description\",\n    text: \"DESCRIPTION\",\n    sort: true,\n    filter: textFilter(),\n    editable: false,\n    formatter: emailFormatter\n  }, {\n    dataField: \"price\",\n    text: \"PRICE\",\n    sort: true,\n    validator: (newValue, row, column) => {\n      if (isNaN(newValue)) {\n        return {\n          valid: false,\n          message: \"Please Enter Numeric Value\"\n        };\n      }\n\n      return true;\n    }\n  }, {\n    dataField: \"description\",\n    text: \"Dropdown\",\n    editor: {\n      type: Type.SELECT,\n      options: [{\n        value: \"A\",\n        label: \"A\"\n      }, {\n        value: \"B\",\n        label: \"B\"\n      }]\n    }\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"React Table\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BootstrapTable, {\n      keyField: \"id\",\n      data: data,\n      columns: columns,\n      pagination: paginationFactory(),\n      cellEdit: cellEditFactory({\n        mode: \"click\",\n        blurToSave: true\n      }),\n      striped: true,\n      hover: true,\n      condensed: true,\n      selectRow: selectRow,\n      filter: filterFactory()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ReactTable, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n\n_c = ReactTable;\nexport default ReactTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReactTable\");","map":{"version":3,"names":["axios","React","useEffect","useState","BootstrapTable","paginationFactory","cellEditFactory","Type","filterFactory","textFilter","ReactTable","data","setData","getData","then","res","console","log","emailFormatter","row","selectRow","mode","clickToSelect","selected","clickToEdit","columns","dataField","text","sort","filter","editable","formatter","validator","newValue","column","isNaN","valid","message","editor","type","SELECT","options","value","label","blurToSave"],"sources":["D:/GitHub_Repository/reactint_practice/src/component/Reacttable/ReactTable.jsx"],"sourcesContent":["import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport cellEditFactory,{Type} from \"react-bootstrap-table2-editor\";\r\nimport filterFactory, { textFilter } from 'react-bootstrap-table2-filter';\r\nimport \"react-bootstrap-table-next/dist/react-bootstrap-table2.min.css\";\r\n\r\nconst ReactTable = () => {\r\n  const [data, setData] = useState([]);\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  const getData = () => {\r\n    axios(\"https://fakestoreapi.com/products\").then((res) => {\r\n      console.log(res.data);\r\n      setData(res.data);\r\n    });\r\n  };\r\n\r\n  const emailFormatter = (data, row) => {\r\n    return <span>Description = {data}</span>;\r\n  };\r\n\r\n  //CheckBox\r\n  const selectRow = {\r\n     mode : \"checkbox\",\r\n     clickToSelect:true,\r\n     selected : [1,3],\r\n     clickToEdit : true,\r\n  }\r\n\r\n\r\n  const columns = [\r\n    {\r\n      dataField: \"description\",\r\n      text: \"DESCRIPTION\",\r\n      sort: true,\r\n      filter: textFilter(),\r\n      editable: false,\r\n      formatter: emailFormatter,\r\n    },\r\n    {\r\n      dataField: \"price\",\r\n      text: \"PRICE\",\r\n      sort: true,\r\n      validator:(newValue,row,column)=>{\r\n        if(isNaN(newValue)){\r\n          return {\r\n            valid:false,\r\n            message:\"Please Enter Numeric Value\"\r\n          }\r\n        }\r\n        return true\r\n      }\r\n    },\r\n    {\r\n      dataField: \"description\",\r\n      text: \"Dropdown\",\r\n       editor:{\r\n        type:Type.SELECT,\r\n        options:[\r\n         { \r\n          value:\"A\",\r\n          label:\"A\"\r\n        },\r\n        { \r\n          value:\"B\",\r\n          label:\"B\"\r\n        },\r\n        ]\r\n       }\r\n    },\r\n  ];\r\n  return (\r\n    <div>\r\n      <h2>React Table</h2>\r\n      <BootstrapTable\r\n        keyField=\"id\"\r\n        data={data}\r\n        columns={columns}\r\n        pagination={paginationFactory()}\r\n        cellEdit={cellEditFactory({ mode: \"click\", blurToSave: true })}\r\n        striped\r\n        hover\r\n        condensed\r\n        selectRow={selectRow}\r\n        filter={ filterFactory() }\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ReactTable;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,cAAP,MAA2B,4BAA3B;AACA,OAAOC,iBAAP,MAA8B,kCAA9B;AACA,OAAOC,eAAP,IAAwBC,IAAxB,QAAmC,+BAAnC;AACA,OAAOC,aAAP,IAAwBC,UAAxB,QAA0C,+BAA1C;AACA,OAAO,gEAAP;;;AAEA,MAAMC,UAAU,GAAG,MAAM;EAAA;;EACvB,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,EAAD,CAAhC;EACAD,SAAS,CAAC,MAAM;IACdW,OAAO;EACR,CAFQ,EAEN,EAFM,CAAT;;EAIA,MAAMA,OAAO,GAAG,MAAM;IACpBb,KAAK,CAAC,mCAAD,CAAL,CAA2Cc,IAA3C,CAAiDC,GAAD,IAAS;MACvDC,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACJ,IAAhB;MACAC,OAAO,CAACG,GAAG,CAACJ,IAAL,CAAP;IACD,CAHD;EAID,CALD;;EAOA,MAAMO,cAAc,GAAG,CAACP,IAAD,EAAOQ,GAAP,KAAe;IACpC,oBAAO;MAAA,6BAAqBR,IAArB;IAAA;MAAA;MAAA;MAAA;IAAA,QAAP;EACD,CAFD,CAbuB,CAiBvB;;;EACA,MAAMS,SAAS,GAAG;IACfC,IAAI,EAAG,UADQ;IAEfC,aAAa,EAAC,IAFC;IAGfC,QAAQ,EAAG,CAAC,CAAD,EAAG,CAAH,CAHI;IAIfC,WAAW,EAAG;EAJC,CAAlB;EAQA,MAAMC,OAAO,GAAG,CACd;IACEC,SAAS,EAAE,aADb;IAEEC,IAAI,EAAE,aAFR;IAGEC,IAAI,EAAE,IAHR;IAIEC,MAAM,EAAEpB,UAAU,EAJpB;IAKEqB,QAAQ,EAAE,KALZ;IAMEC,SAAS,EAAEb;EANb,CADc,EASd;IACEQ,SAAS,EAAE,OADb;IAEEC,IAAI,EAAE,OAFR;IAGEC,IAAI,EAAE,IAHR;IAIEI,SAAS,EAAC,CAACC,QAAD,EAAUd,GAAV,EAAce,MAAd,KAAuB;MAC/B,IAAGC,KAAK,CAACF,QAAD,CAAR,EAAmB;QACjB,OAAO;UACLG,KAAK,EAAC,KADD;UAELC,OAAO,EAAC;QAFH,CAAP;MAID;;MACD,OAAO,IAAP;IACD;EAZH,CATc,EAuBd;IACEX,SAAS,EAAE,aADb;IAEEC,IAAI,EAAE,UAFR;IAGGW,MAAM,EAAC;MACNC,IAAI,EAAChC,IAAI,CAACiC,MADJ;MAENC,OAAO,EAAC,CACP;QACCC,KAAK,EAAC,GADP;QAECC,KAAK,EAAC;MAFP,CADO,EAKR;QACED,KAAK,EAAC,GADR;QAEEC,KAAK,EAAC;MAFR,CALQ;IAFF;EAHV,CAvBc,CAAhB;EAyCA,oBACE;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,cAAD;MACE,QAAQ,EAAC,IADX;MAEE,IAAI,EAAEhC,IAFR;MAGE,OAAO,EAAEc,OAHX;MAIE,UAAU,EAAEpB,iBAAiB,EAJ/B;MAKE,QAAQ,EAAEC,eAAe,CAAC;QAAEe,IAAI,EAAE,OAAR;QAAiBuB,UAAU,EAAE;MAA7B,CAAD,CAL3B;MAME,OAAO,MANT;MAOE,KAAK,MAPP;MAQE,SAAS,MARX;MASE,SAAS,EAAExB,SATb;MAUE,MAAM,EAAGZ,aAAa;IAVxB;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAiBD,CApFD;;GAAME,U;;KAAAA,U;AAsFN,eAAeA,UAAf"},"metadata":{},"sourceType":"module"}