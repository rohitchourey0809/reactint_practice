{"ast":null,"code":"var _jsxFileName = \"D:\\\\GitHub_Repository\\\\reactint_practice\\\\src\\\\component\\\\BasicFormik\\\\Formik.jsx\";\nimport React from \"react\";\nimport \"./BasicFormik.css\";\nimport { Field, Formik } from \"formik\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Basic = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"Anywhere in your app!\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: {\n      username: \"\",\n      email: \"\",\n      mobile: \"\",\n      toggle: false,\n      checked: []\n    },\n    validate: values => {\n      const errors = {};\n\n      if (!values.username) {\n        errors.username = \"Username is requied\";\n      } else if (!values.email) {\n        errors.email = \"Email is Required\";\n      } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\n        errors.email = \"Invalid email address\";\n      } else if (!values.mobile) {\n        errors.mobile = \"Mobile is requied\";\n      } else if (!values.username === \"\" || !values.email === \"\" || !values.mobile === \"\" && !values.toggle === false) {\n        alert(\"Please Filled All Details\");\n      }\n\n      return errors;\n    },\n    onSubmit: (values, _ref) => {\n      let {\n        setSubmitting\n      } = _ref;\n      setTimeout(() => {\n        alert(JSON.stringify(values, null, 2));\n        setSubmitting(false);\n      }, 400);\n    },\n    children: _ref2 => {\n      let {\n        values,\n        errors,\n        touched,\n        handleChange,\n        handleBlur,\n        handleSubmit,\n        isSubmitting\n        /* and other goodies */\n\n      } = _ref2;\n      return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 6,\n  columnNumber: 3\n}, this);\n\n_c = Basic;\nexport default Basic;\n\nvar _c;\n\n$RefreshReg$(_c, \"Basic\");","map":{"version":3,"names":["React","Field","Formik","Basic","username","email","mobile","toggle","checked","values","errors","test","alert","setSubmitting","setTimeout","JSON","stringify","touched","handleChange","handleBlur","handleSubmit","isSubmitting"],"sources":["D:/GitHub_Repository/reactint_practice/src/component/BasicFormik/Formik.jsx"],"sourcesContent":["import React from \"react\";\r\nimport \"./BasicFormik.css\"\r\nimport { Field, Formik } from \"formik\";\r\n\r\nconst Basic = () => (\r\n  <div>\r\n    <h1>Anywhere in your app!</h1>\r\n    <Formik\r\n      initialValues={{\r\n        username: \"\",\r\n        email: \"\",\r\n        mobile: \"\",\r\n        toggle: false,\r\n        checked: [],\r\n      }}\r\n      validate={(values) => {\r\n        const errors = {};\r\n       \r\n        if (!values.username) {\r\n          errors.username = \"Username is requied\";\r\n        }\r\n      \r\n      \r\n       else if (!values.email) {\r\n          errors.email = \"Email is Required\";\r\n        } else if (\r\n          !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\r\n        ) {\r\n          errors.email = \"Invalid email address\";\r\n        }\r\n        \r\n\r\n        else if (!values.mobile) {\r\n          errors.mobile = \"Mobile is requied\";\r\n        }\r\n\r\n        else if(!values.username===\"\" || !values.email ===\"\" || !values.mobile ===\"\" && !values.toggle === false){\r\n          alert(\"Please Filled All Details\")\r\n        }\r\n\r\n       \r\n\r\n        return errors;\r\n      }}\r\n      onSubmit={(values, { setSubmitting }) => {\r\n        setTimeout(() => {\r\n          alert(JSON.stringify(values, null, 2));\r\n\r\n          setSubmitting(false);\r\n        }, 400);\r\n      }}\r\n    >\r\n      {({\r\n        values,\r\n        errors,\r\n        touched,\r\n        handleChange,\r\n        handleBlur,\r\n        handleSubmit,\r\n        isSubmitting,\r\n        /* and other goodies */\r\n      }) => (\r\n        <div></div>\r\n      )}\r\n    </Formik>\r\n  </div>\r\n);\r\n\r\nexport default Basic;\r\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,mBAAP;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,QAA9B;;;AAEA,MAAMC,KAAK,GAAG,mBACZ;EAAA,wBACE;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QADF,eAEE,QAAC,MAAD;IACE,aAAa,EAAE;MACbC,QAAQ,EAAE,EADG;MAEbC,KAAK,EAAE,EAFM;MAGbC,MAAM,EAAE,EAHK;MAIbC,MAAM,EAAE,KAJK;MAKbC,OAAO,EAAE;IALI,CADjB;IAQE,QAAQ,EAAGC,MAAD,IAAY;MACpB,MAAMC,MAAM,GAAG,EAAf;;MAEA,IAAI,CAACD,MAAM,CAACL,QAAZ,EAAsB;QACpBM,MAAM,CAACN,QAAP,GAAkB,qBAAlB;MACD,CAFD,MAKI,IAAI,CAACK,MAAM,CAACJ,KAAZ,EAAmB;QACrBK,MAAM,CAACL,KAAP,GAAe,mBAAf;MACD,CAFG,MAEG,IACL,CAAC,2CAA2CM,IAA3C,CAAgDF,MAAM,CAACJ,KAAvD,CADI,EAEL;QACAK,MAAM,CAACL,KAAP,GAAe,uBAAf;MACD,CAJM,MAOF,IAAI,CAACI,MAAM,CAACH,MAAZ,EAAoB;QACvBI,MAAM,CAACJ,MAAP,GAAgB,mBAAhB;MACD,CAFI,MAIA,IAAG,CAACG,MAAM,CAACL,QAAR,KAAmB,EAAnB,IAAyB,CAACK,MAAM,CAACJ,KAAR,KAAiB,EAA1C,IAAgD,CAACI,MAAM,CAACH,MAAR,KAAkB,EAAlB,IAAwB,CAACG,MAAM,CAACF,MAAR,KAAmB,KAA9F,EAAoG;QACvGK,KAAK,CAAC,2BAAD,CAAL;MACD;;MAID,OAAOF,MAAP;IACD,CApCH;IAqCE,QAAQ,EAAE,CAACD,MAAD,WAA+B;MAAA,IAAtB;QAAEI;MAAF,CAAsB;MACvCC,UAAU,CAAC,MAAM;QACfF,KAAK,CAACG,IAAI,CAACC,SAAL,CAAeP,MAAf,EAAuB,IAAvB,EAA6B,CAA7B,CAAD,CAAL;QAEAI,aAAa,CAAC,KAAD,CAAb;MACD,CAJS,EAIP,GAJO,CAAV;IAKD,CA3CH;IAAA,UA6CG;MAAA,IAAC;QACAJ,MADA;QAEAC,MAFA;QAGAO,OAHA;QAIAC,YAJA;QAKAC,UALA;QAMAC,YANA;QAOAC;QACA;;MARA,CAAD;MAAA,oBAUC;QAAA;QAAA;QAAA;MAAA,QAVD;IAAA;EA7CH;IAAA;IAAA;IAAA;EAAA,QAFF;AAAA;EAAA;EAAA;EAAA;AAAA,QADF;;KAAMlB,K;AAgEN,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}